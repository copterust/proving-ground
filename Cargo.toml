[package]
name = "proving_ground"
description = "Examples of tiny programs for stm32f30x MCUs"
version = "0.1.0"
authors = ["Roma Sokolov", "Alexander Zhuravlev"]
edition = '2021'

[profile.dev]
panic = "abort"
debug = true
opt-level = "s"
lto = false
codegen-units = 1
incremental = false

[profile.release]
panic = "abort"
opt-level = "z"
codegen-units = 1
debug = true
lto = true
incremental = false

[dependencies]
panic-abort = { version = "0.3.2", optional = true }
asm-delay = "0.9.0"
cortex-m = { version = "0.7.6", features = ["inline-asm", "critical-section-single-core"], optional = true}
cortex-m-rt = { version = "0.7.0" , optional = true}
nb = { version = "1.0.0", optional = true }
mpu9250 = { version = "0.24.2", optional = true }
# mpu9250 = {path = "../mpu9250", optional = true}
dcmimu = { version = "0.2.2", optional = true }
ryu = { version = "1.0.10", optional = true }
lsm303c = { version = "0.2.0", optional = true }
# lsm303c = {path = "../lsm303c", optional = true}
bmp280 = { version = "0.0.5", optional = true, package = "bmp280-ehal" }
shared-bus = { version = "0.2.3", optional = true }
vl53l0x = { version = "0.3.1", optional = true }
# vl53l0x = {path = "../vl53l0x", optional = true}
nalgebra = { version = "0.31.0", optional = true, default-features = false }
libm = { version = "0.2.2", optional = true }
rand = { version = "0.8.5", optional = true, default-features = false }
cortex-m-semihosting = { version = "0.5.0", optional = true }
heapless = { version = "0.7.13", optional = true }
ahrs = { git = "https://github.com/vickenty/ahrs", optional=true }

[dependencies.cortex-m-rtic]
version = "1.1.3"
optional = true

[dependencies.panic-semihosting]
features = ["exit"]
version = "0.6.0"
optional = true

[dependencies.ehal]
features = ["unproven"]
version = "0.2.7"
package = "embedded-hal"
optional = true

[dependencies.stm32f3]
version = "0.15.1"
package = "stm32f3"
optional = true

[dependencies.hal]
version = "0.42.0"
package = "alt-stm32f30x-hal"
optional = true
features = ["rt", "stm32f303"]

[dependencies.won2010]
git = "https://github.com/copterust/won2010"
rev = "bab7ae635ad3b27c8abded674cc9061f9171d196"
default-features = false
optional = true

[dependencies.embedded-hal-async]
version = "=0.2.0-alpha.2"
optional = true
[dependencies.embassy-sync]
version = "0.2.0"
features = ["defmt"]
git = "https://github.com/embassy-rs/embassy"
optional = true
[dependencies.embassy-executor]
version = "0.2.0"
features = ["nightly", "arch-cortex-m", "executor-thread", "defmt", "integrated-timers"]
git = "https://github.com/embassy-rs/embassy"
optional = true
[dependencies.embassy-time]
version = "0.1.2"
features = ["defmt", "defmt-timestamp-uptime", "unstable-traits", "tick-hz-32_768"]
git = "https://github.com/embassy-rs/embassy"
optional = true
[dependencies.embassy-stm32]
version = "0.1.0"
git = "https://github.com/embassy-rs/embassy"
features = ["nightly", "defmt", "stm32f303ze", "unstable-pac", "memory-x", "time-driver-any", "exti"]
optional = true
[dependencies.embedded-io]
version = "0.4.0"
features = ["async"]
optional = true
[dependencies.defmt]
version = "0.3"
optional = true
[dependencies.defmt-rtt]
version = "0.4"
optional = true
[dependencies.static_cell]
version = "1.1"
features = ["nightly"]
optional = true
[dependencies.panic-probe]
version = "0.3"
features = ["print-defmt"]
optional = true

[features]
no_device = ["panic-abort", "cortex-m-rt", "cortex-m"]
with_rt = ["panic-abort", "cortex-m-rt", "cortex-m", ]
with_device = ["with_rt", "stm32f3/rt", "stm32f3/stm32f303"]
with_hal = ["with_device", "nb", "hal", "ehal"]
with_mpu = ["with_hal", "mpu9250"]
with_dcmimu = ["with_mpu", "dcmimu"]
with_lsm = ["with_hal", "lsm303c"]
with_bmp = ["with_hal", "bmp280"]
with_shared_bus = ["with_hal", "shared-bus"]
with_vl53l0x = ["with_hal", "vl53l0x"]
with_math = ["nalgebra", "libm", "rand"]
with_semihosting = ["cortex-m-semihosting", "panic-semihosting"]
with_won2010 = ["won2010"]
with_heapless = ["heapless"]
with_ryu = ["ryu"]
with_rtfm = ["cortex-m-rtic"]
with_embassy = ["with_rt", "embassy-sync", "embassy-executor", "embassy-time", "embassy-stm32", "embedded-io", "embedded-hal-async", "defmt", "defmt-rtt", "static_cell", "panic-probe"]
# --all-features will include "generic", but you can't build "mini"
# if device crate is used.
all = ["with_dcmimu", "with_lsm", "with_heapless", "with_rtfm"]

[[bin]]
name = "mini"
path = "mini/main.rs"
required-features = ["no_device"]

[[bin]]
name = "pwm"
path = "pwm/main.rs"
required-features = ["with_device"]

[[bin]]
name = "better_pwm"
path = "better_pwm/main.rs"
required-features = ["with_hal"]

[[bin]]
name = "motors"
path = "motors/main.rs"
required-features = ["with_hal"]

[[bin]]
name = "tmtest"
path = "tmtest/main.rs"
required-features = ["with_hal"]

[[bin]]
name = "serial_echo"
path = "serial_echo/main.rs"
required-features = ["with_hal"]

[[bin]]
name = "vl53l0x"
path = "vl53l0x/main.rs"
required-features = ["with_vl53l0x"]

[[bin]]
name = "raw_sensors"
path = "raw_sensors/main.rs"
required-features = ["with_mpu"]

[[bin]]
name = "semi_sensors"
path = "semi_sensors/main.rs"
required-features = ["with_mpu", "with_semihosting"]

[[bin]]
name = "pin_sensors"
path = "pin_sensors/main.rs"
required-features = ["with_mpu"]

[[bin]]
name = "cycle_sensors"
path = "cycle_sensors/main.rs"
required-features = ["with_mpu", "with_semihosting"]

[[bin]]
name = "systick"
path = "systick/main.rs"
required-features = ["with_hal"]

[[bin]]
name = "therm"
path = "therm/main.rs"
required-features = ["with_mpu"]

[[bin]]
name = "mpu_calib"
path = "mpu_calib/main.rs"
required-features = ["with_mpu"]

[[bin]]
name = "bmp280"
path = "bmp280/main.rs"
required-features = ["with_bmp"]

[[bin]]
name = "ahrs"
path = "ahrs/main.rs"
required-features = ["with_dcmimu"]

[[bin]]
name = "ahrs-ekf"
path = "ahrs-ekf/main.rs"
required-features = [ "ahrs", "with_mpu" ]

[[bin]]
name = "calibration"
path = "calibration/main.rs"
required-features = [ "with_mpu" ]

[[bin]]
name = "lsm303"
path = "lsm303/main.rs"
required-features = ["with_lsm"]

[[bin]]
name = "lsm_mpu"
path = "lsm_mpu/main.rs"
required-features = ["with_lsm", "with_mpu"]

[[bin]]
name = "shared_i2c"
path = "shared_i2c/main.rs"
required-features = ["with_shared_bus", "with_lsm", "with_bmp"]

[[bin]]
name = "altitude"
path = "altitude/main.rs"
required-features = ["with_math"]

[[bin]]
name = "serial_redirect"
path = "serial_redirect/main.rs"
required-features = ["with_hal"]

[[bin]]
name = "nucled"
path = "nucled/main.rs"
required-features = ["with_hal"]

[[bin]]
name = "semi"
path = "semi/main.rs"
required-features = ["with_hal", "with_semihosting"]

[[bin]]
name = "dma_serial"
path = "dma_serial/main.rs"
required-features = ["with_hal"]

[[bin]]
name = "wonca"
path = "wonca/main.rs"
required-features = [ "with_mpu", "with_won2010", "with_math" ]


[[bin]]
name = "feed"
path = "feed/main.rs"
required-features = [ "with_dcmimu", "with_semihosting", "with_heapless", "with_ryu"]

[[bin]]
name = "dma_int"
path = "dma_int/main.rs"
required-features = [ "with_rtfm", "with_hal", "with_heapless"]

[[bin]]
name = "calibrating_ahrs"
path = "calibrating_ahrs/main.rs"
required-features = [ "with_rtfm", "with_hal", "with_heapless", "with_rt", "with_mpu", "with_ryu" ]

[[bin]]
name = "mpu_int"
path = "mpu_int/main.rs"
required-features = [ "with_rtfm", "with_semihosting", "with_mpu" ]

[[bin]]
name = "rtfm_int"
path = "rtfm_int/main.rs"
required-features = [ "with_rtfm", "with_device", "ehal"]

[[bin]]
name = "echo_dma"
path = "echo_dma/main.rs"
required-features = [ "with_rtfm", "with_device", "with_hal", "with_heapless", "with_semihosting"]

[[bin]]
name = "cmd_dma"
path = "cmd_dma/main.rs"
required-features = [ "with_rtfm", "with_device", "with_hal", "with_heapless", "with_semihosting"]

[[bin]]
name = "embassy_raw_sensors"
path = "embassy_raw_sensors/main.rs"
required-features = [ "with_embassy" ]
